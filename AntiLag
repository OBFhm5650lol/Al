local AntiLag = {
    Settings = {
        RemoveDecals = true,
        OptimizeTerrain = true,
        OptimizeLighting = true,
        OptimizeParts = false, -- Disabled by default as this can cause visual issues
        OptimizeCharacters = true,
        OptimizeEffects = true,
        OptimizeNetwork = false, -- Network optimizations can sometimes cause lag
        TextureReplacementId = "",
        MaxFPS = 60,
        QualityLevel = "Level04", -- More balanced quality level
        PhysicsMode = "Default",
        NetworkOwnership = "Automatic",
        DebounceTime = 0.1 -- Added debounce to prevent rapid optimizations
    },
    
    -- Internal state
    _connections = {},
    _optimizedPlayers = {},
    _lastOptimization = 0
}

-- Cache frequently used services
local game = game
local workspace = game:GetService("Workspace")
local lighting = game:GetService("Lighting")
local runService = game:GetService("RunService")
local players = game:GetService("Players")
local userInputService = game:GetService("UserInputService")
local physicsService = game:GetService("PhysicsService")

-- Helper functions
local function safeDisconnect(connection)
    if connection and connection.Connected then
        connection:Disconnect()
    end
end

local function shouldOptimize()
    local now = tick()
    if now - AntiLag._lastOptimization < AntiLag.Settings.DebounceTime then
        return false
    end
    AntiLag._lastOptimization = now
    return true
end

-- Optimization functions
function AntiLag.optimizeTerrain()
    if not AntiLag.Settings.OptimizeTerrain then return end
    
    local terrain = workspace.Terrain
    terrain.WaterWaveSize = 0
    terrain.WaterWaveSpeed = 0
    terrain.WaterReflectance = 0
    terrain.WaterTransparency = 1
    terrain.Decoration = false
end

function AntiLag.optimizeLighting()
    if not AntiLag.Settings.OptimizeLighting then return end
    
    lighting.GlobalShadows = false
    lighting.FogEnd = 9e9
    lighting.Brightness = 1
    lighting.Outlines = false
    lighting.Ambient = Color3.new(0.5, 0.5, 0.5)
    
    -- Only disable effects once, not every frame
    for _, effect in ipairs(lighting:GetChildren()) do
        if effect:IsA("PostEffect") then
            effect.Enabled = false
        end
    end
end

function AntiLag.optimizeRendering()
    if not shouldOptimize() then return end
    
    settings().Rendering.QualityLevel = AntiLag.Settings.QualityLevel
    if AntiLag.Settings.MaxFPS then
        runService:SetThrottleFPS(AntiLag.Settings.MaxFPS)
    end
end

function AntiLag.optimizePhysics()
    if AntiLag.Settings.PhysicsMode then
        physicsService.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Auto
    end
end

function AntiLag.optimizeBaseParts(instance)
    if not AntiLag.Settings.OptimizeParts then return end
    if not shouldOptimize() then return end
    
    if instance:IsA("BasePart") then
        instance.Material = Enum.Material.Plastic
        instance.Reflectance = 0
    end
end

function AntiLag.optimizeCharacter(character)
    if not AntiLag.Settings.OptimizeCharacters then return end
    if not shouldOptimize() then return end
    
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Material = Enum.Material.Plastic
            part.Reflectance = 0
        elseif part:IsA("ParticleEmitter") then
            part.Enabled = false
        end
    end
end

function AntiLag.optimizeVisualEffects(instance)
    if not AntiLag.Settings.OptimizeEffects then return end
    if not shouldOptimize() then return end
    
    if instance:IsA("ParticleEmitter") or instance:IsA("Trail") then
        instance.Enabled = false
    elseif instance:IsA("Fire") or instance:IsA("SpotLight") or instance:IsA("Smoke") then
        instance.Enabled = false
    elseif (instance:IsA("Decal") or instance:IsA("Texture")) and AntiLag.Settings.RemoveDecals then
        instance.Transparency = 1
    end
end

function AntiLag.setupPlayerOptimizations(player)
    if not player:IsA("Player") then return end
    if AntiLag._optimizedPlayers[player] then return end
    
    AntiLag._optimizedPlayers[player] = true
    
    local charAddedConn = player.CharacterAdded:Connect(function(character)
        AntiLag.optimizeCharacter(character)
    end)
    
    table.insert(AntiLag._connections, charAddedConn)
end

function AntiLag.cleanup()
    for _, connection in ipairs(AntiLag._connections) do
        safeDisconnect(connection)
    end
    AntiLag._connections = {}
    AntiLag._optimizedPlayers = {}
end

function AntiLag.init()
    AntiLag.cleanup()
    
    -- Apply one-time optimizations
    AntiLag.optimizeTerrain()
    AntiLag.optimizeLighting()
    AntiLag.optimizePhysics()
    
    -- Set up connections for dynamic optimizations
    local descendantAddedConn = game.DescendantAdded:Connect(function(instance)
        AntiLag.optimizeBaseParts(instance)
        AntiLag.optimizeVisualEffects(instance)
    end)
    table.insert(AntiLag._connections, descendantAddedConn)
    
    local playerAddedConn = players.PlayerAdded:Connect(AntiLag.setupPlayerOptimizations)
    table.insert(AntiLag._connections, playerAddedConn)
    
    -- Optimize existing players
    for _, player in ipairs(players:GetPlayers()) do
        AntiLag.setupPlayerOptimizations(player)
    end
    
    -- Run rendering optimizations once
    AntiLag.optimizeRendering()
end

-- Initialize
AntiLag.init()

return AntiLag
